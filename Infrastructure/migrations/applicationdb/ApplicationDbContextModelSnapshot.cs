// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.migrations.applicationdb
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("CourseId");

                    b.ToTable("Course", (string)null);

                    b.HasData(
                        new
                        {
                            CourseId = 1050,
                            Credits = 3,
                            Title = "Chemistry"
                        },
                        new
                        {
                            CourseId = 4022,
                            Credits = 3,
                            Title = "Microeconomics"
                        },
                        new
                        {
                            CourseId = 4041,
                            Credits = 3,
                            Title = "Macroeconomics"
                        },
                        new
                        {
                            CourseId = 1045,
                            Credits = 4,
                            Title = "Calculus"
                        },
                        new
                        {
                            CourseId = 3141,
                            Credits = 4,
                            Title = "Trigonometry"
                        },
                        new
                        {
                            CourseId = 2021,
                            Credits = 3,
                            Title = "Composition"
                        },
                        new
                        {
                            CourseId = 2042,
                            Credits = 4,
                            Title = "Literature"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollmentId"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollment", (string)null);

                    b.HasData(
                        new
                        {
                            EnrollmentId = 1,
                            CourseId = 1050,
                            Grade = 0,
                            StudentId = 1
                        },
                        new
                        {
                            EnrollmentId = 2,
                            CourseId = 4022,
                            Grade = 2,
                            StudentId = 1
                        },
                        new
                        {
                            EnrollmentId = 3,
                            CourseId = 4041,
                            Grade = 1,
                            StudentId = 1
                        },
                        new
                        {
                            EnrollmentId = 4,
                            CourseId = 1045,
                            Grade = 1,
                            StudentId = 2
                        },
                        new
                        {
                            EnrollmentId = 5,
                            CourseId = 3141,
                            Grade = 4,
                            StudentId = 2
                        },
                        new
                        {
                            EnrollmentId = 6,
                            CourseId = 2021,
                            Grade = 4,
                            StudentId = 2
                        },
                        new
                        {
                            EnrollmentId = 7,
                            CourseId = 1050,
                            StudentId = 3
                        },
                        new
                        {
                            EnrollmentId = 8,
                            CourseId = 1050,
                            StudentId = 4
                        },
                        new
                        {
                            EnrollmentId = 9,
                            CourseId = 4022,
                            Grade = 4,
                            StudentId = 4
                        },
                        new
                        {
                            EnrollmentId = 10,
                            CourseId = 4041,
                            Grade = 2,
                            StudentId = 5
                        },
                        new
                        {
                            EnrollmentId = 11,
                            CourseId = 1045,
                            StudentId = 6
                        },
                        new
                        {
                            EnrollmentId = 12,
                            CourseId = 3141,
                            Grade = 0,
                            StudentId = 7
                        });
                });

            modelBuilder.Entity("Domain.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("StudentId");

                    b.ToTable("Student", (string)null);

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            EmailAddress = "calexander@school.edu",
                            EnrollmentDate = new DateTime(2005, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Carson",
                            LastName = "Alexander"
                        },
                        new
                        {
                            StudentId = 2,
                            EmailAddress = "malonso@school.edu",
                            EnrollmentDate = new DateTime(2002, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Meredith",
                            LastName = "Alonso"
                        },
                        new
                        {
                            StudentId = 3,
                            EmailAddress = "aanand@school.edu",
                            EnrollmentDate = new DateTime(2003, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Arturo",
                            LastName = "Anand"
                        },
                        new
                        {
                            StudentId = 4,
                            EmailAddress = "gbarzdukas@school.edu",
                            EnrollmentDate = new DateTime(2002, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Gytis",
                            LastName = "Barzdukas"
                        },
                        new
                        {
                            StudentId = 5,
                            EmailAddress = "yli@school.edu",
                            EnrollmentDate = new DateTime(2002, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Yan",
                            LastName = "Li"
                        },
                        new
                        {
                            StudentId = 6,
                            EmailAddress = "pjustice@school.edu",
                            EnrollmentDate = new DateTime(2001, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Peggy",
                            LastName = "Justice"
                        },
                        new
                        {
                            StudentId = 7,
                            EmailAddress = "lnorman@school.edu",
                            EnrollmentDate = new DateTime(2003, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Laura",
                            LastName = "Norman"
                        },
                        new
                        {
                            StudentId = 8,
                            EmailAddress = "nolivetto@school.edu",
                            EnrollmentDate = new DateTime(2005, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nino",
                            LastName = "Olivetto"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Enrollment", b =>
                {
                    b.HasOne("Domain.Entities.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Domain.Entities.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("Domain.Entities.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
